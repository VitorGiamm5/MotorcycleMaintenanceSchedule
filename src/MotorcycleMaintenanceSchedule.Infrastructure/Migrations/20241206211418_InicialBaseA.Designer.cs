// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotorcycleMaintenanceSchedule.Infrastructure.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MotorcycleMaintenanceSchedule.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241206211418_InicialBaseA")]
    partial class InicialBaseA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbmaintenanceschedule")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MotorcycleMaintenanceSchedule.Domain.Entities.Schedule.ScheduleEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("ID_SCHEDULE");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DATE_CREATED");

                    b.Property<DateTime?>("DateLastUpdate")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DATE_LAST_UPDATE");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("EMAIL");

                    b.Property<DateTimeOffset?>("EndBusinessHour")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DATE_END_BUSINESS");

                    b.Property<string>("MotorcycleId")
                        .HasColumnType("text")
                        .HasColumnName("ID_FK_MOTORCYCLE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NAME");

                    b.Property<string>("Observation")
                        .HasColumnType("text")
                        .HasColumnName("OBSERVATION");

                    b.Property<int?>("Phone")
                        .HasColumnType("integer")
                        .HasColumnName("PHONE");

                    b.Property<int?>("PhoneDDD")
                        .HasColumnType("integer")
                        .HasColumnName("PHONE_DDD");

                    b.Property<DateTimeOffset?>("ScheduleDate")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DATE_SCHEDULE");

                    b.Property<DateTimeOffset?>("StartBusinessHour")
                        .HasColumnType("timestamptz")
                        .HasColumnName("DATE_START_BUSINESS");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.ToTable("tb_schedule", "dbmaintenanceschedule");
                });
#pragma warning restore 612, 618
        }
    }
}
